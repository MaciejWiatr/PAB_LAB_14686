/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = {
  "/": {
    get: operations["AppController_getHello"];
  };
  "/users/current": {
    get: operations["UsersController_current"];
  };
  "/users": {
    get: operations["UsersController_findAll"];
    post: operations["UsersController_create"];
  };
  "/users/{id}": {
    get: operations["UsersController_findOne"];
    delete: operations["UsersController_remove"];
    patch: operations["UsersController_update"];
  };
  "/books": {
    get: operations["BooksController_findAll"];
    post: operations["BooksController_create"];
  };
  "/books/{id}": {
    get: operations["BooksController_findOne"];
    delete: operations["BooksController_remove"];
    patch: operations["BooksController_update"];
  };
  "/auth/login": {
    post: operations["AuthController_signIn"];
  };
  "/auth/register": {
    post: operations["AuthController_register"];
  };
  "/reviews": {
    post: operations["ReviewsController_create"];
  };
  "/reviews/{id}": {
    delete: operations["ReviewsController_remove"];
  };
};

export type webhooks = Record<string, never>;

export type components = {
  schemas: {
    Review: {
      id: number;
      rating: number;
      user: components["schemas"]["User"];
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    User: {
      id: number;
      username: string;
      password: string;
      role: string;
      books: components["schemas"]["Book"][];
      reviews: components["schemas"]["Review"][];
    };
    Book: {
      id: number;
      name: string;
      description: string;
      user: components["schemas"]["User"];
      /** Format: date-time */
      publishedAt: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    CreateUserDto: {
      username: string;
      password: string;
    };
    UpdateUserDto: {
      /** @enum {string} */
      role?: "USER" | "ADMIN";
      username?: string;
      password?: string;
    };
    CreateBookDto: {
      name: string;
      description: string;
      userId: number;
      /** Format: date-time */
      publishedAt: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    UpdateBookDto: Record<string, never>;
    SignInDto: {
      username: string;
      password: string;
    };
    AccessTokenDto: {
      access_token: string;
    };
    RegisterDto: {
      username: string;
      password: string;
    };
    CreateReviewDto: {
      rating: number;
      userId: number;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = {

  AppController_getHello: {
    responses: {
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  UsersController_current: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  UsersController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"][];
        };
      };
    };
  };
  UsersController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateUserDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  UsersController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  UsersController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": boolean;
        };
      };
    };
  };
  UsersController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserDto"];
      };
    };
    responses: {
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
  BooksController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Book"][];
        };
      };
    };
  };
  BooksController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateBookDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Book"];
        };
      };
    };
  };
  BooksController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Book"];
        };
      };
    };
  };
  BooksController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  BooksController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateBookDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AuthController_signIn: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignInDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["AccessTokenDto"];
        };
      };
    };
  };
  AuthController_register: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["RegisterDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  ReviewsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateReviewDto"];
      };
    };
    responses: {
      201: {
        content: {
          "application/json": components["schemas"]["Review"];
        };
      };
    };
  };
  ReviewsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
};
